---
stages:
  - prepare
  - build
  - test
  - deploy

.docker:builder: &builder
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  stage: prepare
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - echo "Working around https://github.com/GoogleContainerTools/kaniko/issues/595"
    - rm -f .dockerignore
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile.builder --build-arg SFOS_VERSION="$SFOS_VERSION" --destination $CI_REGISTRY_IMAGE/builder-$SFOS_VERSION:$CI_COMMIT_REF_SLUG --cache=true

.sfos330: &sfos330
  variables:
    SFOS_VERSION: 3.3.0.14

.sfos321: &sfos321
  variables:
    SFOS_VERSION: 3.2.1.20

docker:builder:3.2.1.20:
  <<: *sfos321
  <<: *builder

docker:builder:3.3.0.15:
  <<: *sfos330
  <<: *builder

.build: &build
  image: registry.gitlab.com/rubdos/whisperfish/builder-$SFOS_VERSION:$CI_COMMIT_REF_SLUG
  stage: build
  artifacts:
    paths:
      - target/*/release/rpmbuild/RPMS/*/*.rpm
  cache:
    paths:
      - target
      - $CARGO_HOME
  script:
    - echo "Building for $SFOS_VERSION"
    - echo "Configuring cargo-rpm (cfr https://github.com/RustRPM/cargo-rpm/issues/47)"
    - sed -ie "s/armv7hl/$MER_ARCH" Cargo.toml
    - sed -ie "s/arm-unknown-linux-gnueabihf/$RUST_ARCH" Cargo.toml
    - cat Cargo.toml
    - export MERSDK=$MER_SDK #FIXME
    - export MER_TARGET="SailfishOS-$SFOS_VERSION"
    - export RUSTFLAGS="-C link-args=-Wl,-rpath-link,$MERSDK/targets/$MER_TARGET-armv7hl/usr/lib/,-rpath-link,$MERSDK/targets/$MER_TARGET-armv7hl/lib/"
    - cargo rpm build

.build:arm: &build-arm
  variables:
    MER_ARCH: armv7hl
    RUST_ARCH: arm-unknown-linux-gnueabihf
  <<: *build

.build:aarch64: &build-aarch64
  variables:
    MER_ARCH: aarch64
    RUST_ARCH: aarch64-unknown-linux-gnu
  <<: *build

build:3.2.1.20:arm:
  <<: *sfos321
  <<: *build-arm

build:3.3.0.15:arm:
  <<: *sfos330
  <<: *build-arm

# Jolla/coderus doesn't provide us with aarch64 buildroot.
.build:3.2.1.20:aarch64:
  <<: *sfos321
  <<: *build-aarch64

# Jolla/coderus doesn't provide us with aarch64 buildroot.
.build:3.3.0.15:aarch64:
  <<: *sfos330
  <<: *build-aarch64
